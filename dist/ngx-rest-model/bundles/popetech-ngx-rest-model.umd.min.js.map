{"version":3,"sources":["ng://@popetech/ngx-rest-model/lib/constants.ts","ng://@popetech/ngx-rest-model/lib/http/api.service.ts","null","ng://@popetech/ngx-rest-model/lib/models/models.ts","ng://@popetech/ngx-rest-model/lib/models/base-model.ts","ng://@popetech/ngx-rest-model/lib/models/relationship.ts","ng://@popetech/ngx-rest-model/lib/models/model.factory.ts","ng://@popetech/ngx-rest-model/lib/http/backend.service.ts","ng://@popetech/ngx-rest-model/lib/ngx-rest-model.module.ts"],"names":["CONFIG","InjectionToken","ApiService","http","config","this","root","api_root","setBaseUrl","setApiRoot","prototype","url","baseUrl","getBaseUrl","apiRoot","getApiRoot","getUrl","uri","bypassPrefix","get","options","pipe","take","post","payload","put","delete","Injectable","HttpClient","Inject","args","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","Models","add","model","modelName","constructor","name","toLowerCase","models","BaseModel","key","hidden","relationships","setConfig","modelConfig","getConfig","getUri","getSelfUri","setUri","getKey","getRelationship","deserialize","input","prop","indexOf","snakeToCamel","push","value","data","relationships_1","__values","o","m","Symbol","iterator","next","done","tslib_1.__values","relationships_1_1","relationship","relationshipConfig","related","relationshipObject","Relationship","type","ModelFactory","makeRelatedFromRelationship","string","replace","toUpperCase","setRelated","getRelated","setModel","create","getModel","make","makeFromArray","array","ii","makeRelated","BackendService","api","find","id","_this","map","client","save","update","createNew","serialize","destroy","page","requestOptions","params","HttpParams","set","String","response","NgxRestModelModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import {InjectionToken} from \"@angular/core\";\n\nexport const CONFIG = new InjectionToken('config');\n","import {Inject, Injectable} from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from \"rxjs/operators\";\nimport { CONFIG } from '../constants';\n\n@Injectable()\nexport class ApiService {\n\n    private baseUrl: string;\n    private apiRoot: string;\n    private http: HttpClient;\n\n    constructor(http: HttpClient, @Inject(CONFIG) config) {\n        this.http = http;\n        const root = config.api_root;\n\n        this.setBaseUrl(root);\n        this.setApiRoot(root);\n    }\n\n    public setBaseUrl(url: string): void {\n        this.baseUrl = url;\n    }\n\n    public getBaseUrl() {\n        return this.baseUrl;\n    }\n\n    public setApiRoot(url: string): void {\n        this.apiRoot = url;\n    }\n\n    public getApiRoot() {\n        return this.apiRoot;\n    }\n\n    private getUrl(uri, bypassPrefix = false) {\n        if( ! bypassPrefix) {\n            return this.getBaseUrl() + '/' + uri;\n        }\n\n        return this.getApiRoot() + '/' + uri;\n    }\n\n    public get(uri, options = {}, bypassPrefix = false): any {\n        let url = this.getUrl(uri, bypassPrefix);\n        if(options != {}) {\n            return this.http.get(url, options).pipe(take(1));\n        }\n\n        return this.http.get(url).pipe(take(1));\n    }\n\n    public post(uri, payload, bypassPrefix = false, options = {}): any {\n        let url = this.getUrl(uri, bypassPrefix);\n\n        if(options != {}) {\n            return this.http.post(url, payload, options).pipe(take(1));\n        }\n\n        return this.http.post(url, payload).pipe(take(1));\n    }\n\n    public put(uri, payload, bypassPrefix = false) {\n        let url = this.getUrl(uri, bypassPrefix);\n\n        return this.http.put(url, payload).pipe(take(1));\n    }\n\n    public delete(uri, options = {}, bypassPrefix = false) {\n        let url = this.getUrl(uri, bypassPrefix);\n\n        return this.http.delete(url).pipe(take(1));\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class Models {\n\n    static models = {};\n\n    static add(model) {\n        let modelName = new model().constructor.name.toLowerCase();\n        if(!Models.models[modelName]) {\n            Models.models[modelName] = model;\n        }\n    }\n\n    static get(model) {\n        return Models.models[model];\n    }\n}","import { ModelFactory } from './model.factory';\nimport { Relationship } from './relationship';\nimport { Serializable } from './serializable.interface';\nimport { Model } from './model.interface';\n\nimport { Models } from './models';\n\nexport class BaseModel implements Model, Serializable {\n\n\n     public modelConfig = {\n         key: '',\n         uri: '',\n         hidden: [],\n         relationships: {}\n    };\n\n    constructor() {}\n\n    setConfig(config) {\n        this.modelConfig = {...this.getConfig(), ...config};\n    }\n\n    getConfig() {\n        return this.modelConfig;\n    }\n\n    getUri() {\n        return this.modelConfig.uri;\n    }\n\n    getSelfUri() {\n        return this.modelConfig.uri + '/' + this[this.modelConfig.key];\n    }\n\n    setUri(uri) {\n        this.modelConfig.uri = uri;\n    }\n\n    getKey() {\n        return this.modelConfig.key;\n    }\n\n    getRelationship(key) {\n        return this.modelConfig.relationships[key];\n    }\n\n    deserialize(input) {\n\n        let config = this.getConfig();\n        let relationships = [];\n        for(let prop in input) {\n            if(! input.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            if(config.hidden.indexOf(prop) > -1) {\n                continue;\n            }\n\n            if(typeof input[prop] === 'object') {\n\n                if(config.relationships.hasOwnProperty(this.snakeToCamel(prop))) {\n                    relationships.push({\n                        key: this.snakeToCamel(prop),\n                        value: (input[prop] ? input[prop].data : null)\n                    });\n                }\n\n                continue;\n            }\n\n            this[this.snakeToCamel(prop)] = input[prop];\n        }\n\n        for(let relationship of relationships) {\n\n            if(relationship.value === null) {\n                continue;\n            }\n\n            let relationshipConfig = config.relationships[relationship.key];\n\n            let related = Models.get(relationshipConfig.model);\n\n            let relationshipObject = new Relationship(this, related, relationshipConfig.type);\n\n            this[relationship.key] = ModelFactory.makeRelatedFromRelationship(relationshipObject, relationship.value);\n        }\n\n        return this;\n    }\n\n    snakeToCamel(string) {\n        return string.replace(/_\\w/g, function(m) {\n            return m[1].toUpperCase();\n        });\n    }\n}\n","import { BaseModel } from './base-model';\n\nexport class Relationship {\n\n    constructor(protected model, protected related, protected type) {}\n\n    setRelated(related) {\n        this.related = related;\n    }\n\n    getRelated() {\n        return this.related;\n    }\n\n    setModel(model) {\n        this.model = model;\n    }\n\n    create() {\n        // if the related model isn't instantiated,\n        // instantiate it here\n        if( ! (this.related instanceof BaseModel)) {\n            this.related = new this.related();\n        }\n\n        if(this.type == 'hasMany' || this.type == 'hasOne') {\n            this.related.setUri(this.model.getSelfUri() + '/' + this.related.getUri());\n            return this.related;\n        }\n\n        if(this.type == 'belongsTo') {\n            return this.related;\n        }\n    }\n\n    getModel() {\n\n    }\n\n    getUri() {\n\n    }\n}","import { Relationship } from './relationship';\nimport { Models } from \"./models\";\n\nexport class ModelFactory {\n\n    static make(model, data) {\n        return new model().deserialize(data);\n    }\n\n    static makeFromArray(model, array) {\n        let models = [];\n        for(let ii = 0; ii < array.length; ++ii) {\n            models.push(new model().deserialize(array[ii]));\n        }\n        return models;\n    }\n\n    static makeRelated(model, related, key) {\n        let relationshipConfig = model.getRelationship(key);\n\n        let relationship = new Relationship(model, related, relationshipConfig.type);\n\n        model[key] = relationship.create();\n\n        model.setUri(model[key].getSelfUri() + '/' + model.getUri());\n\n        return model;\n    }\n\n    static makeRelatedFromRelationship(relationship, input) {\n        if(relationship.type == 'hasOne' || relationship.type == 'belongsTo') {\n            return relationship.create().deserialize(input);\n        } else if(relationship.type == 'hasMany') {\n            const related = relationship.getRelated();\n            // let constructor = Models.get(related.key);\n            return ModelFactory.makeFromArray(related, input);\n        }\n\n    }\n\n}","import { Injectable } from '@angular/core';\nimport {HttpParams} from \"@angular/common/http\";\n\nimport { ApiService } from './api.service';\nimport { ModelFactory } from '../models/model.factory';\nimport { Models } from \"../models/models\";\nimport { map } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class BackendService {\n\n\n    protected model;\n\n    constructor(protected api: ApiService) {\n    }\n\n    // set model\n    setModel(model) {\n        this.model = model;\n    }\n\n    find(id) {\n        let constructor = Models.get(this.model.key);\n        return this.api.get(new constructor().getUri() + '/' + id).pipe(map((client: any) => {\n            client.data = ModelFactory.make(Models.get(this.model.key), client.data);\n            return client;\n        }));\n    }\n\n    save(data) {\n        if(data[data.getKey()]) {\n            return this.update(data);\n        }\n        return this.createNew(data);\n    }\n\n    update(data) {\n        let payload = data.serialize();\n        return this.api.put(data.getUri() + '/' + data[data.getKey()], payload);\n    }\n\n    createNew(data) {\n        let payload = data.serialize();\n        return this.api.post(data.getUri(), payload);\n    }\n\n    destroy(data) {\n        return this.api.delete(data.getUri() + '/' + data[data.getKey()]);\n    }\n\n    get(model = null, options: any = { page: 1 }) {\n\n\n        let requestOptions: any = {\n            params: new HttpParams()\n        };\n\n        if(options.page != 1) {\n            requestOptions.params = new HttpParams().set('page', String(options.page));\n        }\n\n        let observable;\n\n        if(model === null) {\n            observable = this.api.get(new this.model().getUri(), requestOptions);\n        } else {\n            observable = this.api.get(model.getUri(), requestOptions);\n        }\n\n        return observable.pipe(\n                map((response: any) => {\n                    let data = response.data;\n                    response.data = ModelFactory.makeFromArray(Models.get(this.model.key), data);\n                    return response;\n                })\n        );\n    }\n\n    getRelated(related, key, model = null, options = {}) {\n        if(model == null) {\n            model = this.model;\n        }\n\n        let constructor = Models.get(model.key);\n        model = ModelFactory.makeRelated(new constructor(), related, key);\n\n        return this.get(model);\n    }\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { ApiService } from \"./http/api.service\";\nimport { BackendService } from \"./http/backend.service\";\nimport {CONFIG} from \"./constants\";\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    exports: [],\n    providers:\n    [\n        ApiService,\n        BackendService\n    ]\n})\nexport class NgxRestModelModule {\n    public static forRoot(config): ModuleWithProviders {\n        return {\n            ngModule: NgxRestModelModule,\n            providers: [{ provide: CONFIG, useValue: config}]\n        };\n    }\n}\n"]}